<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="adminMapper">

	<!-- 회원 ResultMap -->
	<resultMap id="memberResultSet" type="member" >
		<result column="MEM_NO" property="memNo"/>
		<result column="MEM_ID" property="memId"/>
		<result column="MEM_PWD" property="memPwd"/>
		<result column="GENDER" property="gender"/>
		<result column="INGIDO" property="ingido"/>
		<result column="MEM_POINT" property="memPoint"/>
		<result column="EMAIL" property="email"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="MEM_NAME" property="memName"/>
		<result column="MEM_AREA" property="memArea"/>
		<result column="PHONE" property="phone"/>
		<result column="BIRTHDAY" property="birthDay"/>
		<result column="DETAIL_AREA" property="detailArea"/>
		<result column="MEM_STATUS" property="memStatus"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="GRADE" property="grade"/>
		<result column="END_DATE" property="endDate"/>
		<result column="TEAM_NO" property="teamNo"/>
		<result column="TEAM_GRADE" property="teamGrade"/>
	</resultMap>	
	
	<!-- 신고 ResultMap -->
	<resultMap id="reportResultSet" type="report">
		<result column="REPORT_NO" property="reportNo" />
		<result column="MEM_NO" property="memNo" />
		<result column="BOARD_NO" property="boardNo" />
		<result column="REPORT_BOARD" property="reportBoard" />
		<result column="REPORT_REASON" property="reportReason" />
		<result column="REPORTER" property="reporter" />
		<result column="REPORT_DATE" property="reportDate" />
		<result column="REPORT_RESULT" property="reportResult" />
		<result column="COMPLETION_DATE" property="completionDate" />
		<result column="MEM_ID" property="memId" />
		<result column="REPORTER_ID" property="reporterId" />
		<result column="PENALTY" property="penalty" />
		<result column="COUNT" property="count" />
	</resultMap>
	
	<!-- 배너 ResultMap -->
	<resultMap id="bannerResultSet" type="banner">
		<result property="bannerNo" column="BANNER_NO" />
		<result property="memNo" column="MEM_NO" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="OriginName" column="ORIGIN_NAME" />
		<result property="changeName" column="CHANGE_NAME" />
		<result property="status" column="STATUS" />
		<result property="writer" column="NICKNAME" />
	</resultMap>
	
	<!-- 팀 멤버 ResultMap -->
	<resultMap type="teamMember" id="teamMemberResultSet">
		<result column="TEAM_NO" 	property="teamNo"/>
		<result column="TEAM_GRADE" property="teamGrade"/>
		<result column="NICKNAME" 	property="nickname"/>
		<result column="MEM_NO" 	property="memNo"/>
		<result column="TEAM_ENROLL_DATE" 	property="teamEnrollDate"/>
	</resultMap>




<!-- 
=============================== 
회원 관련 기능
===============================
-->	

	<!-- 회원목록 개수 조회 -->
		<select id="selectMemberListCount" resultType="_int">
		SELECT 
			   COUNT(*)
		  FROM 
		       MEMBER
		 WHERE 
		       MEM_STATUS = 'Y'
	</select>
	
	<!-- 회원목록 조회 -->
	<select id="selectMemberList" parameterType="hashmap" resultMap="memberResultSet">
		SELECT 
		       MEM_NO,
		       MEM_ID,
		       INGIDO,
		       EMAIL,
		       NICKNAME,
		       MEM_NAME,
		       MEM_AREA,
		       PHONE,
		       BIRTHDAY,
		       DETAIL_AREA,
		       ENROLL_DATE,
		       TEAM_NO,
		       TEAM_GRADE
		  FROM 
		       MEMBER
     LEFT JOIN 
		       PENALTY USING (MEM_NO)
     LEFT JOIN
		       TEAM_MEMBER USING (MEM_NO)
		 WHERE 
		       MEM_STATUS = 'Y'
		 ORDER
		    BY
		<choose>
			<when test="order == 'memNo'">
				MEM_NO 
			</when>
			<when test="order == 'ingido'">
				INGIDO 
			</when>
			<otherwise>
				ENROLL_DATE 
			</otherwise>
		</choose>
		<if test="orderCondition == 'desc'">
				DESC
		</if>
	</select>
	
	<!-- 검색한 회원 목록 개수 조회 -->
	<select id="selectSearchMemberListCount" parameterType="hashmap" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       MEMBER
		 WHERE
		       MEM_STATUS = 'Y'
		   AND
	  	       GRADE != 'A'
		<if test="condition != ''">
			  
		</if>
		<if test="condition == 'name'">
			   AND MEM_NAME LIKE '%' || #{keyword} || '%'
		</if>
		<if test="condition == 'id'">
			   AND MEM_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test="condition == 'nickname'">
			   AND NICKNAME LIKE '%' || #{keyword} || '%'
		</if>  
	</select>
	
	<!-- 검색한 회원 목록 조회 -->
	<select id="selectSearchMemberList" parameterType="hashmap" resultMap="memberResultSet">
		SELECT 
		       MEM_NO,
		       MEM_ID,
		       INGIDO,
		       EMAIL,
		       NICKNAME,
		       MEM_NAME,
		       MEM_AREA,
		       PHONE,
		       BIRTHDAY,
		       DETAIL_AREA,
		       ENROLL_DATE
		  FROM 
		       MEMBER
		 WHERE 
		       MEM_STATUS = 'Y'
		   AND
	  	       GRADE != 'A'
		<if test="condition != ''">
			  
		</if>
		<if test="condition == 'name'">
			   AND MEM_NAME LIKE '%' || #{keyword} || '%'
		</if>
		<if test="condition == 'id'">
			   AND MEM_ID LIKE '%' || #{keyword} || '%'
		</if>
		<if test="condition == 'nickname'">
			   AND NICKNAME LIKE '%' || #{keyword} || '%'
		</if>
		 ORDER
		    BY
		<choose>
			<when test="order == 'memNo'">
				MEM_NO 
			</when>
			<when test="order == 'ingido'">
				INGIDO 
			</when>
			<otherwise>
				ENROLL_DATE 
			</otherwise>
		</choose>
		<if test="orderCondition == 'desc'">
				DESC
		</if>
		<!-- asc 기본값이므로 생략 -->
	</select>
	
	<!-- 회원 전체 목록 조회 -->
	<select id="allMemberList" resultMap="memberResultSet">
		SELECT 
		       MEM_NO,
		       MEM_ID,
		       INGIDO,
		       EMAIL,
		       NICKNAME,
		       MEM_NAME,
		       MEM_AREA,
		       PHONE,
		       BIRTHDAY,
		       DETAIL_AREA,
		       ENROLL_DATE,
		       TEAM_NO,
		       TEAM_GRADE
		  FROM 
		       MEMBER
     LEFT JOIN 
		       PENALTY USING (MEM_NO)
     LEFT JOIN
		       TEAM_MEMBER USING (MEM_NO)
		 WHERE 
		       MEM_STATUS = 'Y'
	  	   AND
	  	       GRADE != 'A'
		 ORDER
		    BY
		       MEM_NO ASC
	</select>




<!-- 
=============================== 
신고 관련 기능
===============================
-->	

	<!-- 신고 목록 개수 조회 -->
	<select id="selectReportListCount" parameterType="string" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       REPORT
		 WHERE
		       REPORT_RESULT 
		<if test="result == 'yet'">
			   is null			 
		</if>
		<if test="result == 'end'">
			   is not null
		</if>
	</select>
	
	
	<!-- 신고 목록 조회 -->
	<select id="selectReportList" parameterType="string" resultMap="reportResultSet">
		SELECT
		       R.REPORT_NO
		       ,B.MEM_NO
		       ,B.MEM_ID
		       ,R.BOARD_NO
		       ,R.REPORT_BOARD
		       ,R.REPORT_REASON
		       ,R.REPORTER
		       ,M.MEM_ID "REPORTER_ID"
		       ,TO_CHAR(R.REPORT_DATE, 'YYYY-MM-DD') "REPORT_DATE"
		       ,R.REPORT_RESULT
		       ,TO_CHAR(R.COMPLETION_DATE, 'YYYY-MM-DD') "COMPLETION_DATE"
		  FROM
		       REPORT "R"
		  JOIN
		       (SELECT MEM_ID, MEM_NO, NICKNAME, BOARD_NO, TITLE, CONTENT
		          FROM BOARD
		          JOIN MEMBER USING(MEM_NO)) "B" ON (B.BOARD_NO = R.BOARD_NO)
		  JOIN
		       MEMBER "M" ON(M.MEM_NO = R.REPORTER)
		 WHERE
		       REPORT_RESULT
		<if test="result == 'yet'">
			   is null			 
		</if>
		<if test="result == 'end'">
			   is not null
		</if>
		 ORDER
            BY
               REPORT_NO ASC
	</select>
	
	<!-- 신고 상세 조회 -->
	<select id="selectReport" parameterType="_int" resultMap="reportResultSet">
		SELECT 
		       R.REPORT_NO
		       ,R.REPORT_BOARD
		       ,R.BOARD_NO      
		       ,R.REPORTER
		       ,R.REPORT_REASON
		       ,TO_CHAR(R.REPORT_DATE, 'YYYY-MM-DD') "REPORT_DATE"
		       ,R.REPORT_RESULT
		       ,TO_CHAR(R.COMPLETION_DATE, 'YYYY-MM-DD') "COMPLETION_DATE" 
		       ,B.MEM_NO
		       ,B.MEM_ID
		       ,B.CONTENT
		       ,M.MEM_ID "REPORTER_ID" 
		  FROM
		       REPORT "R"
		  JOIN
		       (SELECT MEM_ID, MEM_NO, NICKNAME, BOARD_NO, TITLE, CONTENT
		          FROM BOARD
		          JOIN MEMBER USING(MEM_NO)) "B" ON (B.BOARD_NO = R.BOARD_NO)
		  JOIN
		       MEMBER "M" ON(M.MEM_NO = R.REPORTER)
		 WHERE
		       REPORT_NO = #{rno}
	</select>




	<!-- 신고 등록 -->
	<insert id="insertReport" parameterType="report">
		INSERT
		  INTO
		       REPORT
		  	   (
		  	   REPORT_NO
			   ,BOARD_NO
			   ,REPORT_BOARD
			   ,REPORT_REASON
			   ,REPORTER
			   ,REPORT_DATE		  	   
		  	   )
		VALUES
		       (
		       SEQ_RNO.NEXTVAL
		       ,#{boardNo}
		       ,#{reportBoard}
		       ,#{reportReason}
		       ,#{reporter}
		       ,SYSDATE	       
		       )
	</insert>
	
	
	<!-- 신고당한 게시글 상태 업데이트 -->
	<update id="updateBoardStatus" parameterType="_int">
		UPDATE
		       BOARD
		   SET
		       STATUS = 'R'
		 WHERE
		       BOARD_NO = #{boardNo}
	</update>
	
	
	<!-- 신고글 무효 처리 -->
	<update id="invalidReport" parameterType="_int">
		UPDATE
		       REPORT
		   SET
		       REPORT_RESULT = 'X',
		       COMPLETION_DATE = SYSDATE
		 WHERE
		       REPORT_NO = #{reportNo}	
	</update>
	
	<!-- 신고 무효 - 신고당한 게시글 상태 되돌리기 -->
	<update id="reUpdateBoardStatus">
		UPDATE
		       BOARD
		   SET
		       STATUS = 'Y'
		 WHERE
		       BOARD_NO = #{boardNo}
	</update>
	
	<!-- 신고글 확정 처리  -->
	<update id="confirmReport" parameterType="_int">
		UPDATE
		       REPORT
		   SET
		       REPORT_RESULT = 'O',
		       COMPLETION_DATE = SYSDATE
		 WHERE
		       REPORT_NO = #{reportNo}
	</update>
	
	<!-- 패널티 대상 목록 개수 조회 -->
	<select id="selectPenaltyListCount" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM
		       (
		SELECT
		       A.MEM_NO,
		       A.MEM_ID,
		       COUNT,
		       PENALTY,
		       COMPLETION_DATE
		  FROM
		       (
		               SELECT MEM_NO
		                       ,MEM_ID
		                       ,COUNT(*) "COUNT",
		                       CASE WHEN COUNT(*) >= 10 THEN '탈퇴'
		                            WHEN COUNT(*) >= 5  THEN '정지'
		                       END "PENALTY"
		                       ,TO_CHAR(MAX(COMPLETION_DATE), 'YYYY-MM-DD') "COMPLETION_DATE"
		                FROM REPORT "R"
		                JOIN 
		                   (SELECT MEM_ID, MEM_NO, NICKNAME, BOARD_NO, TITLE, CONTENT
		                      FROM BOARD
		                      JOIN MEMBER USING(MEM_NO)  
		                    ) "B" ON (B.BOARD_NO = R.BOARD_NO)
		                WHERE REPORT_RESULT = 'O'
		                GROUP BY MEM_NO, MEM_ID
		                HAVING COUNT(*) >= 5
		                ) "A"
		         JOIN
		              PENALTY "P" ON (A.MEM_NO = P.MEM_NO)
		         WHERE
		               <![CDATA[END_DATE < SYSDATE]]>
		       )
	</select>
	
	<!-- 패널티 대상 목록 조회 -->
	<select id="selectPenaltyList" resultMap="reportResultSet">
		SELECT
		       A.MEM_NO,
		       A.MEM_ID,
		       COUNT,
		       PENALTY,
		       COMPLETION_DATE
		  FROM
		       (
		       SELECT MEM_NO
		               ,MEM_ID
		               ,COUNT(*) "COUNT",
		               CASE WHEN COUNT(*) >= 10 THEN '탈퇴'
		                    WHEN COUNT(*) >= 5  THEN '정지'
		               END "PENALTY"
		               ,TO_CHAR(MAX(COMPLETION_DATE), 'YYYY-MM-DD') "COMPLETION_DATE"
		        FROM REPORT "R"
		        JOIN 
		           (SELECT MEM_ID, MEM_NO, NICKNAME, BOARD_NO, TITLE, CONTENT
		              FROM BOARD
		              JOIN MEMBER USING(MEM_NO)  
		            ) "B" ON (B.BOARD_NO = R.BOARD_NO)
		        WHERE REPORT_RESULT = 'O'
		        GROUP BY MEM_NO, MEM_ID
		        HAVING COUNT(*) >= 5
		        ) "A"
		 JOIN
		      PENALTY "P" ON (A.MEM_NO = P.MEM_NO)
		 WHERE
		       <![CDATA[END_DATE < SYSDATE]]>
	</select>
	
	
	<!-- 정지 처리 -->
<!-- 
	<insert id="stopMember" parameterType="java.util.ArrayList">
		INSERT ALL 
		<foreach collection="list" item="item" index="index">   
		  INTO 
		       PENALTY
		       (
		       MEM_NO
               ,END_DATE
               ) 
	    VALUES
	           (
	           #{item},
	           SYSDATE + 7
	           )
		</foreach>
		SELECT * FROM DUAL
	</insert>
 -->	
	
	<!-- 정치 저리된 적 있는 지 조회 -->
	<select id="selectStopPenalty" parameterType="_int" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM 
		       PENALTY
		 WHERE
		       MEM_NO = #{memNo}
	</select>
	
	<!-- 정지 날짜 업데이트 -->
	<update id="updateStopPenalty" parameterType="_int">
		UPDATE
		       PENALTY
		   SET
		       END_DATE = SYSDATE + 7
		 WHERE 
		       MEM_NO = #{memNo}
	</update>
	
	<!-- 정지 날짜 인서트 -->
	<insert id="insertStopPenalty" parameterType="_int">
		INSERT
		  INTO
		       PENALTY
	    VALUES
	    	   (
	           #{memNo}
	           ,SYSDATE + 7
	           )
	</insert>
	
	<!-- 팀 멤버정보 조회하기 -->
	<select id="selectTeamMem" parameterType="_int" resultMap="teamMemberResultSet">
		SELECT
		        TEAM_NO
		        ,TEAM_GRADE
		        ,MEM_NO
		        ,TEAM_ENROLL_DATE
		  FROM
		       TEAM_MEMBER
		 WHERE
		       TEAM_NO = (
		                  SELECT TEAM_NO
		                    FROM TEAM_MEMBER
		                   WHERE MEM_NO = #{memNo}
		                 )
	</select>
	
	
	
	
	
	
	<!-- 부리더를 리더로 -->
	<update id="updateSubLeader" parameterType="_int">
		UPDATE
		       TEAM_MEMBER
		   SET
		       TEAM_GRADE = 'L'
		 WHERE
			   MEM_NO = #{memNo}	
	</update>
	
	
	
	<!-- 팀 멤버 삭제  -->
	<delete id="deleteTeamMember" parameterType="_int">
		DELETE
		  FROM
		       TEAM_MEMBER
		 WHERE
		       MEM_NO = #{memNo}
	</delete>

	<!-- 강퇴 멤버 상태 변경 -->
	<update id="updateMemberStatus">
		UPDATE
		       MEMBER
		   SET
		       STATUS = 'K'
		 WHERE
		       MEM_NO = #{memNo}
	</update>





	
<!-- 
=============================== 
배너 관련 기능
===============================
-->	

	
	<!-- 배너 목록 개수 조회 -->
	<select id="selectBannerListCount" parameterType="string" resultType="_int">
		SELECT
		       COUNT(*)
		  FROM 
		       BANNER
		 WHERE
			   "STATUS" = #{status}
	</select>
	
	<!-- 배너 목록 조회 -->
	<select id="selectBannerList" parameterType="string" resultMap="bannerResultSet">
		SELECT 
			   BANNER_NO
               ,MEM_NO
               ,CREATE_DATE
               ,ORIGIN_NAME
               ,CHANGE_NAME
               ,STATUS
		  FROM
		       BANNER
		 WHERE
		       "STATUS" = #{status}
		 ORDER
		    BY
		       BANNER_NO DESC
	</select>
	
	<!-- 배너 등록 -->
	<insert id="insertBanner" parameterType="banner">
		INSERT
		  INTO
		       BANNER
		       (
		       BANNER_NO
			   ,MEM_NO
               ,CREATE_DATE
               ,ORIGIN_NAME
               ,CHANGE_NAME
               ,STATUS
		       )
		VALUES
		       (
		       SEQ_BNNO.NEXTVAL
		       ,#{memNo}
		       ,SYSDATE
		       ,#{originName}
		       ,#{changeName}
		       ,'Y'
		       )
	</insert>
	
	<!-- 배너 수정 -->
	<update id="updateBanner" parameterType="banner">
		UPDATE
		       BANNER
		   SET
		       STATUS = #{status}
		 WHERE
		       BANNER_NO = #{bannerNo}
	</update>
	
	<!-- 메인페이지 배너 조회 -->
	<select id="selectMainBannerList" resultMap="bannerResultSet">
		SELECT 
			   BANNER_NO
               ,MEM_NO
               ,CREATE_DATE
               ,ORIGIN_NAME
               ,CHANGE_NAME
               ,STATUS
		  FROM
		       BANNER
		 WHERE
		       "STATUS" = 'Y'
		 ORDER
		    BY
		       BANNER_NO DESC
	</select>
	
	
<!-- 
=============================== 
공지 관련 기능
===============================
-->	


	<!-- 공지사항 등록 -->
	<insert id="insertNotice" parameterType="notice">
		INSERT
		  INTO
		       NOTICE
		       (
		       NOTICE_NO
		       ,CATEGORY
		       ,TITLE
		       ,CONTENT
		       ,MEM_NO
		       ,CREATE_DATE
		       ,ORIGIN_NAME
		       ,CHANGE_NAME
		       )
		VALUES
		       (
		       SEQ_NNO.NEXTVAL
		       ,#{category}
		       ,#{title}
		       ,#{content}
		       ,#{memNo}
		       ,SYSDATE
		       ,#{originName}
		       ,#{changeName}
		       )
	</insert>
	
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="notice">
		UPDATE
		       NOTICE
		   SET
			   CATEGORY = #{category}
			   ,TITLE = #{title}
			   ,CONTENT = #{content}
			   ,ORIGIN_NAME = #{originName}
			   ,CHANGE_NAME = #{changeName}
	     WHERE
	           NOTICE_NO = #{noticeNo}
	       AND
	           STATUS = 'Y'
	</update>
	
	<!-- 공지사항 삭제 -->
	<update id="deleteNotice" parameterType="_int">
		UPDATE
		       NOTICE
		   SET
		       STATUS = 'N'
		 WHERE
			   NOTICE_NO = #{nno}
	   	   AND
	   	       STATUS = 'Y'	
	</update>
	
	
	
	
</mapper>
