<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="member" >
		<result column="MEM_NO" property="memNo"/>
		<result column="MEM_ID" property="memId"/>
		<result column="MEM_PWD" property="memPwd"/>
		<result column="GENDER" property="gender"/>
		<result column="INGIDO" property="ingido"/>
		<result column="MEM_POINT" property="memPoint"/>
		<result column="EMAIL" property="email"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="MEM_NAME" property="memName"/>
		<result column="MEM_AREA" property="memArea"/>
		<result column="PHONE" property="phone"/>
		<result column="BIRTHDAY" property="birthDay"/>
		<result column="DETAIL_AREA" property="detailArea"/>
		<result column="MEM_STATUS" property="memStatus"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="GRADE" property="grade"/>
		<result column="END_DATE" property="endDate"/>
		<result column="TEAM_NO" property="teamNo"/>
		<result column="TEAM_GRADE" property="teamGrade"/>
	</resultMap>
	
	<!-- 로그인용 쿼리문  -->
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT 
		       MEM_NO,
		       MEM_ID,
		       MEM_PWD,
		       GENDER,
		       INGIDO,
		       MEM_POINT,
		       EMAIL,
		       NICKNAME,
		       MEM_NAME,
		       MEM_AREA,
		       PHONE,
		       BIRTHDAY,
		       DETAIL_AREA,
		       MEM_STATUS,
		       ENROLL_DATE,
		       GRADE,
		       END_DATE,
		       TEAM_NO,
		       TEAM_GRADE,
		       FAILCNT
		  FROM 
		       MEMBER
     LEFT JOIN 
		       PENALTY USING (MEM_NO)
     LEFT JOIN
		       TEAM_MEMBER USING (MEM_NO)
		 WHERE 
		       MEM_ID = #{memId}
		   AND
		       MEM_STATUS = 'Y'
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="member">
		INSERT 
		  INTO
		       MEMBER
		       (
		       MEM_NO,
		       MEM_ID,
		       MEM_PWD,
		       GENDER,
		       INGIDO,
		       MEM_POINT,
		       EMAIL,
		       NICKNAME,
		       MEM_NAME,
		       MEM_AREA,
		       PHONE,
		       BIRTHDAY,
		       DETAIL_AREA,
		       MEM_STATUS,
		       ENROLL_DATE,
		       GRADE,
		       FAILCNT
		       )
		       VALUES
		       (
		       SEQ_MNO.NEXTVAL,
		       #{memId},
		       #{memPwd},
		       #{gender},
		       #{ingido},
		       #{memPoint},
		       #{email},
		       #{nickName},
		       #{memName},
		       #{memArea},
		       #{phone},
		       #{birthDay},
		       #{detailArea},
		       'Y',
		       SYSDATE,
		       #{grade},
		       0
		       )
	</insert>
	
	<!-- 로그인 횟수 증가 -->
	<update id="loginCount" parameterType="member">
		UPDATE 
		       MEMBER
		   SET  
		       FAILCNT = FAILCNT + 1
		 WHERE 
		       MEM_ID = #{memId}
	</update>
	
	<!-- 로그인 성공시 횟수 초기화 -->
	<update id="loginCountReset" parameterType="member">
		UPDATE
		       MEMBER
		   SET 
		       FAILCNT = 0
		 WHERE 
		       MEM_ID = #{memId}
	</update>
	
	<!-- 로그인실패로 인한 비밀번호 초기화 -->
	<update id="loginStopped" parameterType="member">
		UPDATE
			   MEMBER
		   SET
		   	   MEM_PWD = #{memPwd}
		 WHERE 
		 	   MEM_ID = #{memId}  	   		   
	</update>
	
	<!-- 아이디찾기 -->
	<select id="findId" parameterType="member" resultMap="memberResultSet">
		SELECT 
			   MEM_ID
		  FROM	   
		   	   MEMBER 
		 WHERE 
		 	   MEM_NAME = #{memName}   
		   AND
		   	   PHONE = #{phone}	   
	</select>
	
	<!-- 비밀번호 찾기 시 메일요청을 위한  아이디,이메일 확인-->
	<select id="findPwdMailRequest" parameterType="member" resultType="_int">
		SELECT 
		       COUNT(*)
		  FROM
		       MEMBER
		 WHERE 
		       MEM_ID = #{memId}
		   AND 
		       EMAIL = #{email} 
	</select>
	
	<!-- 인증번호 cert테이블에 입력 -->
	<insert id="sendMail" parameterType="cert">
		INSERT
		  INTO
		      CERT
		      (
		      CERT_IP,
		      SECRET_NO,
		      VALID_TIME
		      )
		      VALUES
		      (
		      #{certIp},
		      #{secretNo},
		      SYSDATE
		      )
	</insert>
	
	<!-- 인증번호 확인 -->
	<select id="certNumCheck" parameterType="cert" resultType="cert">
		SELECT
		       CERT_IP,
		       SECRET_NO,
		       VALID_TIME
		  FROM 
		       CERT
		 WHERE 
		       CERT_IP = #{certIp}
		   AND 
		       SECRET_NO = #{secretNo}
	</select>
	
	<!-- Cert table 한 행 지우기 -->
	<delete id="remove" parameterType="cert">
		DELETE
			   CERT
		 WHERE
		 	   CERT_IP = #{certIp}	
		   AND 
		       SECRET_NO = #{secretNo}	      	
	</delete>
	
	<!-- 비밀번호 변경 -->
	<update id="pwdChange" parameterType="member">
		UPDATE
		       MEMBER
		   SET
		       MEM_PWD = #{memPwd},
		       FAILCNT = 0
		 WHERE 
		       MEM_ID = #{memId} 
	</update>
</mapper>
